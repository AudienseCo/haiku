$input-height: 3.6rem;
$input-line-height: 2.4rem;
$input-default-width: 20rem;
$input-v-padding: ($input-height - $input-line-height)/2;

@mixin input-base-error {
    background-color: color($name: "error", $variant: "tertiary");
    border-color: color($name: "error", $variant: "secondary");
    color: color($name: "error", $variant: "secondary");
}

// Common styles used in many inputs and select/dropdown buttons
.input-base {
    background-color: color($name: "background", $hue: "light");
    border-radius: 3px;
    border: .1rem solid color($name: "border", $variant: "secondary");
    color: color($name: "text", $hue: "dark");
    display: inline-block;
    height: $input-height;
    line-height: $input-line-height - .2rem;
    padding: $input-v-padding 1rem;
    position: relative;
    text-align: left;
    vertical-align: middle;
    width: $input-default-width;

    &:focus {
        border-color: color($name: "socialbro");
    }

    &.error {
        @include input-base-error;
    }

    // Use this modifier to add a caret in case it's a dropdown or select wrapper
    &.with-caret {
        @include text-truncate;
        cursor: pointer;
        padding-right: 3rem;

        &:after {
            border-left: .5rem solid transparent;
            border-right: .5rem solid transparent;
            border-top: .5rem solid #555;
            content: "";
            height: 0;
            pointer-events: none;
            position: absolute;
            right: 1.5rem;
            top: 50%;
            transform: translateY(-50%);
            width: 0;
        }
    }

    // Since we need a wrapper for a custom select, we need to position
    // it absolute covering the whole wrapper
    & > select {
        @include disable-appearance;
        @include abs-pos(0, 0, 0, 0);
        cursor: pointer;
        padding: $input-v-padding 1rem;
        position: absolute;
        width: 100%;

        &:-moz-focusring {
            color: transparent;
            text-shadow: 0 0 0 #000;
        }
    }
}

// Group of label+input or input+button each with similar style
.input-group {
    border-collapse: separate;
    border-width: 0;
    display: inline-table;
    width: $input-default-width;

    // an input text next to an input label
    .input-label + .input-base {
        border-width: 1px;
        border-radius: 0 3px 3px 0;
    }

    .input-base:not(:last-child) {
        border-bottom-right-radius: 0;
        border-top-right-radius: 0;
        border-width: 1px 0 1px 1px;
    }

    .input-base {
        display: table-cell;
        height: $input-height;
        padding: $input-v-padding 1rem;
        width: 100%;

        &:focus {
            border-right-width: 1px;

            & + .input-group-button > .btn {
                border-left-width: 0;
            }
        }
    }

    .input-group-button {
        display: table-cell;
        height: $input-height;
        vertical-align: middle;

        & > .btn {
            border-width: 1px;
            height: $input-height;
            border-radius: 0 3px 3px 0;
            width: 100%;
        }
    }

    .input-label {
        background: color($name: "background");
        border-color: color($name: "border", $variant: "secondary");
        border-radius: 3px 0 0 3px;
        border-style: solid;
        border-width: 1px 0 1px 1px;
        color: color($name: "text", $hue: "dark");
        cursor: default;
        display: table-cell;
        font-weight: bold;
        height: $input-height - .2rem;
        line-height: $input-line-height - .2rem;
        padding: ($input-v-padding - .1rem) 1rem;
        vertical-align: middle;
        white-space: nowrap;

        &:last-child {
            border-radius: 0 3px 3px 0;
            border-width: 1px;
            font-weight: normal;
        }
    }

    &.error {
        .input-label, .input-group-button > .btn {
            background-color: color($name: "error", $variant: "secondary");
            border-color: color($name: "error", $variant: "secondary");
            color: color($name: "background", $hue: "light");
        }

        .input-base {
            @include input-base-error;
        }
    }
}

// Checkboxes styling. In this case we can allow use label to target
.input-checkbox {
    cursor: pointer;
    display: inline-block;
    height: 1.6rem;
    margin-right: .3rem;
    position: relative;
    vertical-align: middle;
    width: 1.6rem;

    &:hover > label {
        opacity: 0.6;
    }

    & > label {
        border-radius: 2px;
        bottom: 0;
        box-shadow: 0 0 0 1px #ccc;
        color: transparent;
        cursor: pointer;
        font: 0/0 a;
        left: 0;
        position: absolute;
        right: 0;
        text-shadow: none;
        top: 0;
    }

    & > input[type=checkbox] {
        display: none;
        visibility: hidden;
    }

    & > input[type=checkbox]:checked + label {
        background: color($name: "socialbro");
        box-shadow: 0 0 0 1px color($name: "socialbro");

        &:after {
            background: transparent;
            border: 3px solid color($name: "background", $hue: "light");
            border-right: none;
            border-top: none;
            content: '';
            height: .7rem;
            left: .3rem;
            position: absolute;
            top: .3rem;
            transform: rotate(-45deg);
            width: 1.1rem;
        }
    }
}

// Radio buttons styling.
.input-radio {
    position: relative;

    &:before {
        background-color: color($name: "border", $variant: "secondary", $hue: "light");
        border-radius: 100%;
        border: 1px solid color($name: "background", $hue: "light");
        box-shadow: inset 0 1px 0 0 rgba(0, 0, 0, 0.09);
        cursor: pointer;
        display: inline-block;
        height: 2rem;
        width: 2rem;
        content: '';
        position: absolute;
        left: 0rem;
        top: -.2rem;
    }

    & > input[type=radio] {
        display: none;
        visibility: hidden;
    }

    & > span {
        margin-left: 2.4rem;
    }

    & > span:after {
        background: color($name: "background", $hue: "light");
        border-radius: 100%;
        border: 1px solid transparent;
        box-shadow: 0 1px 0 rgba(0, 0, 0, 0.08);
        content: '';
        display: block;
        height: 1rem;
        width: 1rem;
        position: absolute;
        left: .5rem;
        top: .3rem;
    }

    & > input[type=radio]:checked + span:after {
        background: color($name: "socialbro");
        box-shadow: 0 1px 0 rgba(255, 255, 255, 0.33), inset 0 1px rgba(0, 0, 0, 0.09);
    }

    &:focus {
        background: color($name: "socialbro", $variant: "tertiary");
    }
}
